library("reshape")
library("seqinr")
library("adegenet")
library("haplotypes")
library("ape")
library("RColorBrewer")
library("pegas")
library("hierfstat")
library("poppr")
library("maps")
library("prettymapr")
library("sp")
#read in distance
dist <- read.csv("data/distance.csv")
m<- map("world", xlim=c(16,33), ylim=c(-35,-28), col="gray", fill=TRUE,mar=c(4, 4, 4, 4))
addnortharrow("topleft",scale=0.75)
addscalebar(pos="topright")
xat <- pretty(m$range[1:2],n = 10)
xlab <- parse(text=degreeLabelsEW(xat))
yat <- pretty(m$range[3:4])
ylab <- parse(text=degreeLabelsNS(yat))
box()
axis(2, las=TRUE, at=yat, labels=ylab)
axis(3, at=xat, labels=xlab)
points(dist$Long,dist$Lat,pch=16,cex=1.7,col="black")
points(dist$Long,dist$Lat,pch=16,cex=1.5,col="white")
points(dist$Long,dist$Lat,pch=16,cex=1,col="darkblue")
##Here we first subset the data to include only the four main species we are interested in
##1.1 Rapid Assessment
focus.species <- c("Ciona robusta","Clavelina lepadiformis","Microcosmus squamiger","Styela plicata")
RA.s.09 <- read.csv(file="data/distribution/09.RA.csv",header=TRUE,stringsAsFactors = T)
RA.s.09 <- RA.s.09[RA.s.09$Species %in% focus.species,]
RA.s.09$Species <- droplevels(RA.s.09$Species)
RA.s.09 <- melt(RA.s.09, id=c("Species"))
RA.s.17 <- read.csv("data/distribution/17.RA.csv",header=TRUE,stringsAsFactors = T)
RA.s.17 <- RA.s.17[RA.s.17$Species %in% focus.species,]
RA.s.17$Species <- droplevels(RA.s.17$Species)
RA.s.17 <- melt(RA.s.17, id=c("Species"))
pdf("figures/RA.09-17.s.pdf",width = 8,height = 2.5)
par(mar=c(1.1,11.1,3.1,2.1))
plot(as.numeric(RA.s.09$variable),as.numeric(RA.s.09$Species),type="n",ylab = "",xlab = "",xaxt="n",yaxt="n",ylim=c(0.5,4.5))
for (line in 1:12){
segments(line,0,line,10,lty=5,col="grey")
}
points(as.numeric(RA.s.09$variable)-0.2,as.numeric(factor(RA.s.09$Species, levels=rev(levels(RA.s.09$Species)))),cex=(as.numeric(RA.s.09$value))*1.2,pch=19,col="darkred")
points(as.numeric(RA.s.09$variable[RA.s.09$value=="NS"])-0.2,as.numeric(factor(RA.s.09$Species[RA.s.09$value=="NS"], levels=rev(levels(RA.s.09$Species[RA.s.09$value=="NS"])))),cex=2*1.2,pch=1,col="darkred")
points(as.numeric(RA.s.17$variable)+0.2,as.numeric(factor(RA.s.17$Species, levels=rev(levels(RA.s.17$Species)))),cex=(as.numeric(RA.s.17$value))*1.2,pch=19,col="darkblue")
axis(3,at=1:12,labels=levels(RA.s.09$variable))
axis(2,at=1:4,labels=rev(levels(RA.s.09$Species)),las=1,font.axis=3)
dev.off()
dev.off()
par(mar=c(1.1,11.1,3.1,2.1))
plot(as.numeric(RA.s.09$variable),as.numeric(RA.s.09$Species),type="n",ylab = "",xlab = "",xaxt="n",yaxt="n",ylim=c(0.5,4.5))
for (line in 1:12){
segments(line,0,line,10,lty=5,col="grey")
}
points(as.numeric(RA.s.09$variable)-0.2,as.numeric(factor(RA.s.09$Species, levels=rev(levels(RA.s.09$Species)))),cex=(as.numeric(RA.s.09$value))*1.2,pch=19,col="darkred")
points(as.numeric(RA.s.09$variable[RA.s.09$value=="NS"])-0.2,as.numeric(factor(RA.s.09$Species[RA.s.09$value=="NS"], levels=rev(levels(RA.s.09$Species[RA.s.09$value=="NS"])))),cex=2*1.2,pch=1,col="darkred")
points(as.numeric(RA.s.17$variable)+0.2,as.numeric(factor(RA.s.17$Species, levels=rev(levels(RA.s.17$Species)))),cex=(as.numeric(RA.s.17$value))*1.2,pch=19,col="darkblue")
axis(3,at=1:12,labels=levels(RA.s.09$variable))
axis(2,at=1:4,labels=rev(levels(RA.s.09$Species)),las=1,font.axis=3)
#RABS by distance 09 & 17
distances <- dist$DistFromWest[match(as.character(RA.s.09$variable),dist$sitecode)]
par(mar=c(3.1,11.1,2.1,2.1))
plot(distances,as.numeric(RA.s.09$Species),type="n",ylab = "",xlab = "",xaxt="n",yaxt="n",ylim=c(0.5,4.5))
counter <- 0
for (line in levels(RA.s.09$variable)){
segments(counter*183.3333333333,4.5,counter*183.3333333333,5,lty=5,col="grey")
segments(dist$DistFromWest[dist$sitecode==line],4.2,counter*183.3333333333,4.5,lty=5,col="grey")
segments(dist$DistFromWest[dist$sitecode==line],0,dist$DistFromWest[dist$sitecode==line],4.2,lty=5,col="grey")
counter <- counter+1
}
for (species in levels(RA.s.09$Species)){
min09 <- min(distances[RA.s.09$value>0 & RA.s.09$value!="NS" & RA.s.09$Species==species ])
max09 <- max(distances[RA.s.09$value>0 & RA.s.09$value!="NS" & RA.s.09$Species==species ])
# min09ns <- min(distances[RA.s.09$value>0  & RA.s.09$Species==species ])
# max09ns <- max(distances[RA.s.09$value>0  & RA.s.09$Species==species ])
min17 <- min(distances[RA.s.17$value>0 & RA.s.17$value!="NS" & RA.s.17$Species==species])
max17 <- max(distances[RA.s.17$value>0 & RA.s.17$value!="NS" & RA.s.17$Species==species])
speciesindex <- match(species,rev(levels(RA.s.09$Species)))
#  segments(min09ns,speciesindex+0.1,max09ns,speciesindex+0.1,col="darkred",lwd=3,lty=5)
segments(min09,speciesindex+0.1,max09,speciesindex+0.1,col="darkred",lwd=5)
segments(min17,speciesindex-0.1,max17,speciesindex-0.1,col="darkblue",lwd=5)
#add a dotted line for species found in DU in 09 to indicate non-survey
#if(max(distances[RA.s.09$value>0 & RA.s.09$value!="NS" & RA.s.09$Species==species ])>1800){
#  segments(1879.18,speciesindex+0.1,2047.53,speciesindex+0.1,col="darkred",lwd=5,lty=3)
#}
}
axis(3,at=(0:11)*183.3333333333,labels=levels(RA.s.09$variable))
axis(1,at=seq(0,2200,200),labels=seq(0,2200,200),cex.axis=0.8)
axis(2,at=1:4,labels=rev(levels(RA.s.09$Species)),las=1,font.axis=3)
dev.off()
plot(distances,as.numeric(RA.s.09$Species),type="n",ylab = "",xlab = "",xaxt="n",yaxt="n",ylim=c(0.5,4.5))
counter <- 0
for (line in levels(RA.s.09$variable)){
segments(counter*183.3333333333,4.5,counter*183.3333333333,5,lty=5,col="grey")
segments(dist$DistFromWest[dist$sitecode==line],4.2,counter*183.3333333333,4.5,lty=5,col="grey")
segments(dist$DistFromWest[dist$sitecode==line],0,dist$DistFromWest[dist$sitecode==line],4.2,lty=5,col="grey")
counter <- counter+1
}
for (species in levels(RA.s.09$Species)){
min09 <- min(distances[RA.s.09$value>0 & RA.s.09$value!="NS" & RA.s.09$Species==species ])
max09 <- max(distances[RA.s.09$value>0 & RA.s.09$value!="NS" & RA.s.09$Species==species ])
# min09ns <- min(distances[RA.s.09$value>0  & RA.s.09$Species==species ])
# max09ns <- max(distances[RA.s.09$value>0  & RA.s.09$Species==species ])
min17 <- min(distances[RA.s.17$value>0 & RA.s.17$value!="NS" & RA.s.17$Species==species])
max17 <- max(distances[RA.s.17$value>0 & RA.s.17$value!="NS" & RA.s.17$Species==species])
speciesindex <- match(species,rev(levels(RA.s.09$Species)))
#  segments(min09ns,speciesindex+0.1,max09ns,speciesindex+0.1,col="darkred",lwd=3,lty=5)
segments(min09,speciesindex+0.1,max09,speciesindex+0.1,col="darkred",lwd=5)
segments(min17,speciesindex-0.1,max17,speciesindex-0.1,col="darkblue",lwd=5)
#add a dotted line for species found in DU in 09 to indicate non-survey
#if(max(distances[RA.s.09$value>0 & RA.s.09$value!="NS" & RA.s.09$Species==species ])>1800){
#  segments(1879.18,speciesindex+0.1,2047.53,speciesindex+0.1,col="darkred",lwd=5,lty=3)
#}
}
axis(3,at=(0:11)*183.3333333333,labels=levels(RA.s.09$variable))
axis(1,at=seq(0,2200,200),labels=seq(0,2200,200),cex.axis=0.8)
axis(2,at=1:4,labels=rev(levels(RA.s.09$Species)),las=1,font.axis=3)
par(mar=c(3.1,11.1,2.1,2.1))
plot(distances,as.numeric(RA.s.09$Species),type="n",ylab = "",xlab = "",xaxt="n",yaxt="n",ylim=c(0.5,4.5))
counter <- 0
for (line in levels(RA.s.09$variable)){
segments(counter*183.3333333333,4.5,counter*183.3333333333,5,lty=5,col="grey")
segments(dist$DistFromWest[dist$sitecode==line],4.2,counter*183.3333333333,4.5,lty=5,col="grey")
segments(dist$DistFromWest[dist$sitecode==line],0,dist$DistFromWest[dist$sitecode==line],4.2,lty=5,col="grey")
counter <- counter+1
}
for (species in levels(RA.s.09$Species)){
min09 <- min(distances[RA.s.09$value>0 & RA.s.09$value!="NS" & RA.s.09$Species==species ])
max09 <- max(distances[RA.s.09$value>0 & RA.s.09$value!="NS" & RA.s.09$Species==species ])
# min09ns <- min(distances[RA.s.09$value>0  & RA.s.09$Species==species ])
# max09ns <- max(distances[RA.s.09$value>0  & RA.s.09$Species==species ])
min17 <- min(distances[RA.s.17$value>0 & RA.s.17$value!="NS" & RA.s.17$Species==species])
max17 <- max(distances[RA.s.17$value>0 & RA.s.17$value!="NS" & RA.s.17$Species==species])
speciesindex <- match(species,rev(levels(RA.s.09$Species)))
#  segments(min09ns,speciesindex+0.1,max09ns,speciesindex+0.1,col="darkred",lwd=3,lty=5)
segments(min09,speciesindex+0.1,max09,speciesindex+0.1,col="darkred",lwd=5)
segments(min17,speciesindex-0.1,max17,speciesindex-0.1,col="darkblue",lwd=5)
#add a dotted line for species found in DU in 09 to indicate non-survey
#if(max(distances[RA.s.09$value>0 & RA.s.09$value!="NS" & RA.s.09$Species==species ])>1800){
#  segments(1879.18,speciesindex+0.1,2047.53,speciesindex+0.1,col="darkred",lwd=5,lty=3)
#}
}
axis(3,at=(0:11)*183.3333333333,labels=levels(RA.s.09$variable))
axis(1,at=seq(0,2200,200),labels=seq(0,2200,200),cex.axis=0.8)
axis(2,at=1:4,labels=rev(levels(RA.s.09$Species)),las=1,font.axis=3)
#1.2 What about eDNA surveys? (dropping site SY as not covered in other surveys)
#COI
eDNA.coi <- read.csv("data/eDNA/cleaned/COI.incidence.csv")
eDNA.coi <- eDNA.coi[-c(1,15)]
eDNA.coi <- eDNA.coi[eDNA.coi$Assignment %in% focus.species,]
eDNA.coi <- melt(eDNA.coi, id=c("Assignment"))
eDNA.coi <- eDNA.coi[eDNA.coi$variable!="SY",]
eDNA.coi.u <- read.csv("data/eDNA/cleaned/COI.u.incidence.csv")
eDNA.coi.u <- eDNA.coi.u[-c(1,15)]
eDNA.coi.u <- eDNA.coi.u[eDNA.coi.u$Assignment %in% focus.species,]
eDNA.coi.u <- melt(eDNA.coi.u, id=c("Assignment"))
eDNA.coi.u <- eDNA.coi.u[eDNA.coi.u$variable!="SY",]
#Calculate mean of DADA2 and UNOISE3 detection because there are some small differences!
eDNA.coi$value <- (eDNA.coi$value + eDNA.coi.u$value[match(paste(eDNA.coi.u$Assignment,eDNA.coi.u$variable,sep="."),paste(eDNA.coi$Assignment,eDNA.coi$variable,sep="."))])/2
#18S
eDNA.18S <- read.csv("data/eDNA/cleaned/18S.incidence.csv")
eDNA.18S <- eDNA.18S[-c(1,15)]
eDNA.18S <- eDNA.18S[eDNA.18S$Assignment %in% focus.species,]
eDNA.18S <- melt(eDNA.18S, id=c("Assignment"))
eDNA.18S <- eDNA.18S[eDNA.18S$variable!="SY",]
historical <- read.csv("data/historical/rawdata.update2022.csv")
palette(c("#d55e00","#cc79a7","#0072b2","#009e73"))
par(mfrow=c(4,1),mar=c(2.1, 2.1, 1, 1))
counter <-  1
for (spp in unique(historical$Species)){
plot(0,xlim=c(1935,2020),ylim=c(0,2000),cex.axis=0.92)
polygon(c(historical$Date[historical$Species==spp],rev(historical$Date[historical$Species==spp])),
c(historical$Range[historical$Species==spp],rep(0,length(historical$Range[historical$Species==spp]))),
col=counter,border = NA)
#text(1945,1500,bquote(italic(.(spp))),pos=3)
counter <- counter + 1
}
unique(historical$Species)
historical <- read.csv("data/historical/rawdata.update2022.csv")
palette(c("#d55e00","#cc79a7","#0072b2","#009e73"))
par(mfrow=c(4,1),mar=c(2.1, 2.1, 1, 1))
counter <-  1
for (spp in unique(historical$Species)){
plot(0,xlim=c(1935,2020),ylim=c(0,2000),cex.axis=0.92)
polygon(c(historical$Date[historical$Species==spp],rev(historical$Date[historical$Species==spp])),
c(historical$Range[historical$Species==spp],rep(0,length(historical$Range[historical$Species==spp]))),
col=counter,border = NA)
#text(1945,1500,bquote(italic(.(spp))),pos=3)
counter <- counter + 1
}
unique(historical$Species)
historical <- read.csv("data/historical/rawdata.update2022.csv")
palette(c("#d55e00","#cc79a7","#0072b2","#009e73"))
par(mfrow=c(4,1),mar=c(2.1, 2.1, 1, 1))
counter <-  1
for (spp in unique(historical$Species)){
plot(0,xlim=c(1935,2020),ylim=c(0,2000),cex.axis=0.92)
polygon(c(historical$Date[historical$Species==spp],rev(historical$Date[historical$Species==spp])),
c(historical$Range[historical$Species==spp],rep(0,length(historical$Range[historical$Species==spp]))),
col=counter,border = NA)
#text(1945,1500,bquote(italic(.(spp))),pos=3)
counter <- counter + 1
}
pdf("figures/HistroicalRangeNew.pdf",width = 4,height = 7)
palette(c("#d55e00","#cc79a7","#0072b2","#009e73"))
par(mfrow=c(4,1),mar=c(2.1, 2.1, 1, 1))
counter <-  1
for (spp in unique(historical$Species)){
plot(0,xlim=c(1935,2020),ylim=c(0,2000),cex.axis=0.92)
polygon(c(historical$Date[historical$Species==spp],rev(historical$Date[historical$Species==spp])),
c(historical$Range[historical$Species==spp],rep(0,length(historical$Range[historical$Species==spp]))),
col=counter,border = NA)
#text(1945,1500,bquote(italic(.(spp))),pos=3)
counter <- counter + 1
}
dev.off()
#Legend for bubbles
pdf("figures/figure1/legend.pdf",width = 1.5,height = 2)
par(mar=c(1.1,1.1,1.1,1.1))
plot(NA,xlim=c(1,3),ylim=c(1,4),xaxt="n",yaxt="n",bty="n")
points(rep(1.5,3),seq(3.5,3.75,0.09),cex=c(1.2,2.4,3.6),pch=1,col="darkblue")
text(rep(3.2,3),seq(3.5,3.9,length.out=3),labels=c("< 10%","10-50%","> 50%"),cex=0.6,pos=2,col="darkblue")
points(rep(1.5,4),seq(2.5,2.75,0.065),cex=1:4,pch=0,col="darkgreen")
text(rep(3.2,4),seq(2.4,2.9,length.out=4),labels=c("> 0.000001","> 0.00001","> 0.0001","> 0.001"),cex=0.6,pos=2,col="darkgreen")
points(rep(1.5,4),seq(1.5,1.75,0.065),cex=1:4,pch=5,col="darkviolet")
text(rep(3.2,4),seq(1.4,1.9,length.out=4),labels=c("> 0.00001","> 0.0001","> 0.001","> 0.01"),cex=0.6,pos=2,col="darkviolet")
dev.off()
